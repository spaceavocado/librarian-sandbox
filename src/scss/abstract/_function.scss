@use 'sass:math';

// Remove units
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return math.div($number, ($number * 0 + 1));
  }
  @return $number;
}

/**
 * Calculate the luminance for a color.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
@function luminance($color) {
  $red: nth($mdc-theme-linear-channel-values, red($color) + 1);
  $green: nth($mdc-theme-linear-channel-values, green($color) + 1);
  $blue: nth($mdc-theme-linear-channel-values, blue($color) + 1);
  @return 0.2126 * $red + 0.7152 * $green + 0.0722 * $blue;
}

/**
 * Calculate the contrast ratio between two colors.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
@function contrast($back, $front) {
  $backLum: luminance($back) + 0.05;
  $foreLum: luminance($front) + 0.05;
  @return math.div(max($backLum, $foreLum), min($backLum, $foreLum));
}

/**
 * Get the light or dark color based on the contrast.
 */
@function contrast-color($color, $light, $dark) {
  $lc: contrast($color, $light);
  $dc: contrast($color, $dark);
  @if ($lc > $dc) {
    @return $light;
  } @else {
    @return $dark;
  }
}
